CMAKE_MINIMUM_REQUIRED(VERSION 2.6.4)

PROJECT(compute)

#Using c++11
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

FIND_PACKAGE(glfw3 3.2 REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)

#GLEW
FIND_LIBRARY(GLEW_LIBRARY glew32s)
FIND_PATH(GLEW_INCLUDE_DIR glew.h)

#GLFW
FIND_LIBRARY(GLFW_LIBRARY glfw3)
FIND_PATH(GLFW_INCLUDE_DIR glfw3.h)

FIND_LIBRARY(CGM_LIBRARY   cgm)
FIND_PATH(CGM_INCLUDE_DIR  vec3.hpp)

FIND_LIBRARY(CGS_LIBRARY   cgs)
FIND_PATH(CGS_INCLUDE_DIR  Transform.hpp)

FIND_LIBRARY(GLS_LIBRARY gls)
FIND_PATH(GLS_INCLUDE_DIR Shader.hpp)

#Mac dependencies to use GLFW3
IF(APPLE)
FIND_LIBRARY(COCOA_LIBRARY Cocoa)
FIND_LIBRARY(IOKIT_LIBRARY IOKit)
FIND_LIBRARY(COREVIDEO_LIBRARY CoreVideo)
SET(OSX_LIBS ${COCOA_LIBRARY} ${IOKIT_LIBRARY} ${COREVIDEO_LIBRARY})
ENDIF()



INCLUDE_DIRECTORIES(src ${CGM_INCLUDE_DIR} ${CGS_INCLUDE_DIR} ${GLS_INCLUDE_DIR} ${GLFW_INCLUDE_DIR} ${GLEW_INCLUDE_DIR} ${OPENGL_INCLUDE_DIR})

#LINK_DIRECTORIES(C:/glew-2.0.0/lib/Release/Win32 C:/glfw/lib)


#SET(INCLUDE_FILES src/compute.hpp)
SET(SOURCE_FILES  src/compute.cpp)

ADD_EXECUTABLE(compute  ${SOURCE_FILES})

IF(APPLE)
TARGET_LINK_LIBRARIES(compute ${OSX_LIBS} ${GLFW_LIBRARY} ${OPENGL_gl_LIBRARY} ${GLEW_LIBRARY} ${CGM_LIBRARY} ${CGS_LIBRARY} ${GLS_LIBRARY} ${ASSIMP_LIBRARY} ${SOIL_LIBRARY})
ENDIF()


IF(WIN32)
TARGET_LINK_LIBRARIES(compute ${GLFW_LIBRARY} ${OPENGL_gl_LIBRARY} ${GLEW_LIBRARY} ${CGM_LIBRARY} ${CGS_LIBRARY} ${GLS_LIBRARY} )
ENDIF()





