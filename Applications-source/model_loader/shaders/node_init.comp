#version 430
layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

uniform  int  u_alloc_start; // starting addres of the newly allocated nodes
uniform  int  u_num;         // number of allocated nodes 

/* Octree node pool , pointer component and 
 * diffuse component
 */
uniform layout(binding = 0, r32ui) coherent uimageBuffer u_octree_ptr;  // pointer part
uniform layout(binding = 1, r32ui) coherent uimageBuffer u_octree_diff; // diffuse part

void main() 
{
	uint offset;
	uint thx_id  =  gl_GlobalInvocationID.y * 1024 + gl_GlobalInvocationID.x;
	if (thx_id >= u_num){
		return;
	}

	imageStore( u_octree_ptr, int( u_alloc_start + thx_id), uvec4(0,0,0,0) );
	imageStore( u_octree_diff, int( u_alloc_start + thx_id), uvec4(0,0,0,0) );
}